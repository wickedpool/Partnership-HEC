<?php
/***************************************************************************
 *  					Theme Functions
 * 	----------------------------------------------------------------------
 * 						DO NOT EDIT THIS FILE
 *	----------------------------------------------------------------------
 * 
 *  					Copyright (C) Themify
 * 						http://themify.me
 *
 *  To add custom PHP functions to the theme, create a new 'custom-functions.php' file in the theme folder.
 *  They will be added to the theme automatically.
 * 
 ***************************************************************************/

/////// Actions ////////
// Enqueue scripts and styles required by theme
add_action( 'wp_enqueue_scripts', 'themify_theme_enqueue_scripts', 11 );
add_action( 'admin_enqueue_scripts', 'themify_theme_admin_enqueue_scripts' );

// Browser compatibility
add_action( 'wp_head', 'themify_viewport_tag' );

// Register custom menu
add_action( 'init', 'themify_register_custom_nav');

// Register sidebars
add_action( 'widgets_init', 'themify_theme_register_sidebars' );

/////// Filters ////////

// Apply some transition setup
//add_filter( 'themify_builder_create_animation_selectors', 'themify_transition_setup' );
// Extend builder inview animation
//add_filter( 'themify_builder_animation_inview_selectors', 'themify_extend_animation_selectors' );

/**
 * Enqueue Stylesheets and Scripts
 * @since 1.0.0
 */
function themify_theme_enqueue_scripts(){

	// Get theme version for Themify theme scripts and styles
	$theme_version = wp_get_theme()->display('Version');

	
	$is_fullpage_scroll = themify_theme_is_fullpage_scroll();

	///////////////////
	//Enqueue styles
	///////////////////
	
	// Themify base styling
	wp_enqueue_style( 'theme-style', get_stylesheet_uri(), array(), $theme_version);

	// Themify Media Queries CSS
	wp_enqueue_style( 'themify-media-queries', THEME_URI . '/media-queries.css', array(), $theme_version);
	

	// Google Web Fonts embedding
	wp_enqueue_style( 'google-fonts', themify_https_esc('http://fonts.googleapis.com/css'). '?family=Roboto:400,100,300,700|Roboto+Condensed:400,300,700');

	// Fontello
	wp_enqueue_style( 'themify-fontello', THEME_URI . '/fontello/css/fontello.css', array(), $theme_version);

	///////////////////
	//Enqueue scripts
	///////////////////

	// Slide mobile navigation menu
	wp_enqueue_script( 'slide-nav', THEME_URI . '/js/themify.sidemenu.js', array( 'jquery' ), $theme_version, true );

    // Excanvas
	wp_enqueue_script( 'themify-excanvas', THEME_URI . '/js/excanvas.js', array(), $theme_version, true );

	// Legacy section highlight
	global $wp_post_types, $themify;
	if ( isset( $wp_post_types[ 'section' ] ) && 'section' == $themify->query_post_type ) {
		wp_enqueue_script( 'themify-section-highlight', THEME_URI . '/js/themify.section-highlight.js', array(), $theme_version, true );
	}

	// Backstretch
	wp_enqueue_script( 'themify-backstretch', THEMIFY_URI.'/js/backstretch.js', array('jquery'), $theme_version, true );

	// Smart Resize for events debouncedresize and throttledresize
	wp_enqueue_script( 'themify-smartresize', THEME_URI.'/js/jquery.smartresize.js', array('jquery'), $theme_version, true );

	// Gallery plugin
	wp_enqueue_script( 'themify-widegallery', THEME_URI . '/js/themify.widegallery.js', array('jquery', 'themify-smartresize', 'themify-carousel-js'), $theme_version, true );

	// Modernizr
	wp_enqueue_script( 'themify-modernizr', THEME_URI . '/js/modernizr.min.js', array(), '2.8.3', true );

	// Masonry
	wp_enqueue_script( 'themify-masonry', THEME_URI . '/js/jquery.masonry.min.js', array(), $theme_version, true );

	// One Page Scroll
	wp_enqueue_script( 'jquery-effects-core' );
	if ( $is_fullpage_scroll ) {
		wp_enqueue_script( 'themify-slimscroll', THEME_URI . '/js/jquery.slimscroll.min.js', array(), $theme_version, true );
		wp_enqueue_script( 'themify-fullpage', THEME_URI . '/js/jquery.fullPage.js', array( 'jquery', 'jquery-effects-core' ), $theme_version, true );
	} else  {
		wp_enqueue_script( 'themify-waypoints', THEMIFY_URI . '/js/waypoints.min.js', array('jquery'), $theme_version, true );	
	}

	// Portfolio Expander
	wp_enqueue_script( 'themify-portfolio-expander', THEME_URI . '/js/themify.portfolio-expander.js', array( 'jquery', 'jquery-effects-core' ), $theme_version, true );

	// Themify internal scripts
	wp_enqueue_script( 'theme-script', THEME_URI . '/js/themify.script.js', array('jquery'), $theme_version, true );

        // Inject variable values in gallery script
	wp_localize_script( 'theme-script', 'themifyScript', apply_filters('themify_script_vars', array(
		'lightbox' => themify_lightbox_vars_init(),
		'lightboxContext' => apply_filters('themify_lightbox_context', '#pagewrap'),
		'chart' => apply_filters('themify_chart_init_vars', array(
			'trackColor' => 'rgba(0,0,0,.1)',
			'scaleColor' => false,
			'lineCap' => 'butt',
			'rotate' => 0,
			'size' => 175,
			'lineWidth' => 3,
			'animate' => 2000
		)),
		'ajax_nonce'	=> wp_create_nonce('ajax_nonce'),
		'ajax_url'		=> admin_url( 'admin-ajax.php' ),
		'networkError'	=> __('Unknown network error. Please try again later.', 'themify'),
		'termSeparator'	=> ', ',
		'galleryFadeSpeed' => '300',
		'galleryEvent' => 'click',
		'fullPageScroll' => $is_fullpage_scroll,
		'scrollHighlight' => array(
                'scroll' => 'external', // performed by themes
		),
	)));
	
	// WordPress internal script to move the comment box to the right place when replying to a user
	if ( is_single() || is_page() ) wp_enqueue_script( 'comment-reply' );

	// Dequeue builder scroll highlight when fullpage scroll enabled
	if ( $is_fullpage_scroll ) 
		wp_dequeue_script( 'themify-scroll-highlight' );
}

/**
 * Apply some transition effect
 * @param array $setup 
 * @return array
 */
function themify_transition_setup( $setup ) {

	$setup = array(
		'selectors' => array(
			'.section-post .shortcode.list-posts', '.section-post .shortcode.team',
			'.section-post .shortcode.portfolio', '.section-post .shortcode.highlight',
			'.loops-wrapper .portfolio-slider-nested',
			'.testimonial.slider', '.testimonial.slider .carousel-ready',
			'.section-post .module-portfolio', '.section-post .module-highlight',
			'.shortcode.col4-3', '.shortcode.col4-2', '.shortcode.col4-1',
			'.shortcode.col3-2', '.shortcode.col3-1', '.shortcode.col2-1',
			'body:not(.query-section) .loops-wrapper.list-post', 'body:not(.query-section) .loops-wrapper.grid4', 'body:not(.query-section) .loops-wrapper.grid3', 'body:not(.query-section) .loops-wrapper.grid2', 'body:not(.query-section) .loops-wrapper.grid2-thumb', 'body:not(.query-section) .loops-wrapper.list-thumb-image'
		),
		'effect' => 'fly-in'
	);
	return $setup;
}

/**
 * Extend animation selector on inview
 * @param string $selector 
 * @return string
 */
function themify_extend_animation_selectors( $selector ) {
	$extends = array(
		'.loops-wrapper.fly-in > .post',
		'.loops-wrapper.slide-up > .post',
		'.loops-wrapper .portfolio-slider-nested',
                '.testimonial.slider', '.testimonial.slider .carousel-ready',
		'.shortcode.col4-3', '.shortcode.col4-2', '.shortcode.col4-1',
		'.shortcode.col3-2', '.shortcode.col3-1', '.shortcode.col2-1',
	);
	$selector = array_merge( $selector, $extends );
	return $selector;
}

/**
 * Add viewport tag for responsive layouts
 * @since 1.0.0
 */
function themify_viewport_tag(){
	echo "\n".'<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no">'."\n";
}

/* Custom Write Panels
/***************************************************************************/

///////////////////////////////////////
// Build Write Panels
///////////////////////////////////////

if ( ! function_exists( 'themify_theme_init_types' ) ) {
	/**
	 * Initialize custom panel with its definitions
	 * Custom panel definitions are located in admin/post-type-TYPE.php
	 * @since 1.0.7
	 */
	function themify_theme_init_types() {
		// Load required files for post, page and custom post types where it applies
		foreach ( array( 'post', 'page', 'highlight', 'team', 'portfolio', 'section', 'testimonial', 'gallery' ) as $type ) {
			require_once( "admin/post-type-$type.php" );
		}
		/**
		 * Navigation menus used in page custom panel to specify a custom menu for the page.
		 * @var array
		 * @since 1.2.7
		 */
		$nav_menus = array(	array( 'name' => '', 'value' => '', 'selected' => true ) );
		foreach ( get_terms( 'nav_menu' ) as $menu ) {
			$nav_menus[] = array( 'name' => $menu->name, 'value' => $menu->slug );
		}

		themify_build_write_panels( apply_filters('themify_theme_meta_boxes',
			array(
				array(
					'name'		=> __('Post Options', 'themify'),
					'id' 		=> 'post-options',
					'options'	=> themify_theme_post_meta_box(),
					'pages'		=> 'post'
				),
				array(
					'name'		=> __('Page Options', 'themify'),
					'id' 		=> 'page-options',
					'options'	=> themify_theme_page_meta_box( array( 'nav_menus' => $nav_menus ) ),
					'pages'		=> 'page'
				),
				array(
					"name"		=> __('Query Posts', 'themify'),
					'id'		=> 'query-posts',
					"options"	=> themify_theme_query_post_meta_box(),
					"pages"		=> "page"
				),
				array(
					"name"		=> __('Query Sections', 'themify'),
					'id' 		=> 'query-section',
					"options"	=> themify_theme_query_section_meta_box(),
					"pages"		=> "page"
				),
				array(
					"name"		=> __('Query Portfolios', 'themify'),
					'id' 		=> 'query-portfolio',
					"options"	=> themify_theme_query_portfolio_meta_box(),
					"pages"		=> "page"
				),
				array(
					'name'		=> __('Section Options', 'themify'),
					'id' 		=> 'section-options',
					'options'	=> themify_theme_section_meta_box(),
					'pages'		=> 'section'
				),
				array(
					'name'		=> __('Portfolio Options', 'themify'),
					'id' 		=> 'portfolio-options',
					'options' 	=> themify_theme_portfolio_meta_box(),
					'pages'		=> 'portfolio'
				),
				array(
					'name'		=> __('Team Options', 'themify'),
					'id' 		=> 'team-options',
					'options' 	=> themify_theme_team_meta_box(),
					'pages'		=> 'team'
				),
				array(
					'name'		=> __('Highlight Options', 'themify'),
					'id' 		=> 'highlight-options',
					'options' 	=> themify_theme_highlight_meta_box(),
					'pages'		=> 'highlight'
				),
				array(
					'name'		=> __('Testimonial Options', 'themify'),
					'id' 		=> 'testimonial-options',
					'options' 	=> themify_theme_testimonial_meta_box(),
					'pages'		=> 'testimonial'
				),
				array(
					'name'		=> __('Gallery Options', 'themify'),
					'id' 		=> 'gallery-options',
					'options' 	=> themify_theme_gallery_meta_box(),
					'pages'		=> 'gallery'
				),
			)
		));
	}
}
add_action( 'after_setup_theme', 'themify_theme_init_types' );

///////////////////////////////////////
// Enable WordPress feature image
///////////////////////////////////////
add_theme_support( 'post-thumbnails' );
	
/**
 * Register Custom Menu Function
 * @since 1.0.0
 */
function themify_register_custom_nav() {
	register_nav_menus( array(
		'main-nav' => __( 'Main Navigation', 'themify' )
	));
}

/**
 * Default Main Nav Function
 * @since 1.0.0
 */
function themify_default_main_nav() {
	echo '<ul id="main-nav" class="main-nav clearfix">';
		wp_list_pages('title_li=');
	echo '</ul>';
}

/**
 * Sets custom menu selected in page custom panel as navigation, otherwise sets the default.
 * @since 1.2.7
 */
function themify_theme_menu_nav() {
	$custom_menu = themify_get( 'custom_menu' );
	if ( isset( $custom_menu ) && '' != $custom_menu ) {
		wp_nav_menu( array( 'menu' => $custom_menu, 'fallback_cb' => 'themify_default_main_nav' , 'container'  => '' , 'menu_id' => 'main-nav' , 'menu_class' => 'main-nav' ) );
	} else {
		wp_nav_menu( array( 'theme_location' => 'main-nav' , 'fallback_cb' => 'themify_default_main_nav' , 'container'  => '' , 'menu_id' => 'main-nav' , 'menu_class' => 'main-nav' ) );
	}
}

/**
 * Checks if the browser is a mobile device
 * @return boolean 
 */
function themify_is_mobile(){
	return preg_match("/(android|avantgo|blackberry|bolt|boost|cricket|docomo|fone|hiptop|mini|mobi|palm|phone|pie|tablet|up\.browser|up\.link|webos|wos)/i", $_SERVER["HTTP_USER_AGENT"]);
}


/**
 * Add class and data attribute to portfolio section
 * @param sting $link
 * @return string
 */
add_filter( 'themify_get_featured_image_link', 'themify_theme_porto_expand_link' );
function themify_theme_porto_expand_link( $link ) {
	global $post;
	if( ! is_singular( 'portfolio' ) && get_post_type() == 'portfolio' 
		&& themify_get('external_link') == '' && themify_get('lightbox_link') == '' ) {
		$link .= '" class="porto-expand-js';
	}
	return $link;
}

/**
 * Expand portfolio content with ajax
 * @return void
 */
add_action( 'template_redirect', 'themify_theme_porto_expand_content', 20 );
function themify_theme_porto_expand_content() {
	if( is_single() && isset( $_GET['porto_expand'] ) && $_GET['porto_expand'] == 1 ) {
		global $post, $wp, $wp_query;
		// remove admin bar inside iframe
		add_filter( 'show_admin_bar', '__return_false' );

		$templatefilename = 'single-portfolio-expanded.php';

		$return_template = locate_template( $templatefilename );

		if ( have_posts() ) {
			include( $return_template );
			die();
		} else {
			$wp_query->is_404 = true;
		}

	}
}

/**
 * Output required classes like transition setting or full section/builder row scrolling setting.
 *
 * @param array $classes
 *
 * @return array
 */
function themify_theme_add_transition_effect_body_class( $classes ) {
	
	/**
	 * Introduced when deprecating sections in favor of Builder rows.
	 *
	 * @since 1.3.1
	 */
	if ( is_page() && 'yes' == themify_get( 'section_full_scrolling' ) ) {
		$classes[] = 'query-section';
		$classes[] = 'full-section-scrolling';
		// Add loading animation
		add_action( 'themify_content_start', 'themify_theme_add_section_loader' );
	}
	return $classes;
}
add_filter( 'body_class', 'themify_theme_add_transition_effect_body_class' );

/**
 * Adds page loading animation
 *
 * @since 1.3.6
 */
function themify_theme_add_section_loader() {
        $color = themify_get('setting-page_loader_color');
        $icon = themify_get('setting-page_loader_icon');
        $cl = $bg = '';
        if($icon){
            if(strpos($icon,'fa-')===0){
                $cl = ' fa '.$icon;
            }
            else{
                $bg = 'background:url('.$icon.') center/cover no-repeat';
            }
        }
	?>
	<div class="section_loader"<?php echo $color?'style="background-color:#'.$color.'"':''?>>
            <div <?php echo $bg?'style="'.$bg.'"':'';?> class="section_spinner<?php echo $cl?>"></div>
	</div>
	<?php
}

/**
 * Remove new line character in strings
 * @param $string
 * @return string
 */
function themify_remove_rn_chars($string) {
	return preg_replace('/^\s+|\n|\r|\s+$/m', '', $string);
}

/**
 * Register sidebars
 * @since 1.0.0
 */
function themify_theme_register_sidebars() {
	$sidebars = array(
		array(
			'name' => __('Sidebar', 'themify'),
			'id' => 'sidebar-main',
			'before_widget' => '<div id="%1$s" class="widget %2$s">',
			'after_widget' => '</div>',
			'before_title' => '<h4 class="widgettitle">',
			'after_title' => '</h4>',
		),
		array(
			'name' => __('Social Widget', 'themify'),
			'id' => 'social-widget',
			'before_widget' => '<div id="%1$s" class="widget %2$s">',
			'after_widget' => '</div>',
			'before_title' => '<strong class="widgettitle">',
			'after_title' => '</strong>',
		)
	);
	foreach( $sidebars as $sidebar ) {
		register_sidebar( $sidebar );
	}

	// Footer Sidebars
	themify_register_grouped_widgets();
}

if ( ! function_exists('themify_theme_gallery_plugins_args') ) {
	/**
	 * Enable Timeline entries to launch lightbox/fullscreen galleries
	 * @param $args
	 * @return mixed
	 * @since 1.0.4
	 */
	function themify_theme_gallery_plugins_args($args) {
		$args['contentImagesAreas'] .= ', .section-post';
		return $args;
	}
	add_filter('themify_gallery_plugins_args', 'themify_theme_gallery_plugins_args');
}

if ( ! function_exists( 'themify_theme_default_social_links' ) ) {
	/**
	 * Replace default squared social link icons with circular versions
	 * @param $data
	 * @return mixed
	 * @since 1.0.0
	 */
	function themify_theme_default_social_links( $data ) {
		$pre = 'setting-link_img_themify-link-';
		$data[$pre.'0'] = THEME_URI . '/images/twitter.png';
		$data[$pre.'1'] = THEME_URI . '/images/facebook.png';
		$data[$pre.'2'] = THEME_URI . '/images/google-plus.png';
		$data[$pre.'3'] = THEME_URI . '/images/youtube.png';
		$data[$pre.'4'] = THEME_URI . '/images/pinterest.png';
		return $data;
	}
	add_filter( 'themify_default_social_links', 'themify_theme_default_social_links' );
}

if ( ! function_exists( 'themify_theme_custom_post_css' ) ) {
	/**
	 * Outputs custom post CSS at the end of a post
	 * @since 1.0.0
	 */
	function themify_theme_custom_post_css() {
		global $themify;
		$post_id = '.section-post.post-'.get_the_ID();
		$css = array();
		$style = '';
		if ( ! isset( $themify->google_fonts ) ) {
			$themify->google_fonts = '';
		}
		$rules = array(
			"$post_id" => array(
				array(	'prop' => 'font-size',
						'key' => array('font_size', 'font_size_unit')
				),
				array(	'prop' => 'font-family',
						'key' => 'font_family'
				),
				array(	'prop' => 'color',
						'key' => 'font_color'
				),
				array(	'prop' => 'background-color',
						'key' => 'background_color'
				),
				array(	'prop' => 'background-image',
						'key' => 'background_image'
				),
				array(	'prop' => 'background-repeat',
						'key' => 'background_repeat'
				)
			),
			"$post_id h1, $post_id h2, $post_id h3, $post_id h4, $post_id h5, $post_id h6" => array(
				array(	'prop' => 'font-family',
						'key' => 'font_family'
				),
				array(	'prop' => 'color',
						'key' => 'font_color'
				)
			),
			"$post_id .section-title" => array(
				array(	'prop' => 'font-size',
						'key' => array('title_font_size', 'font_size_unit')
				),
				array(	'prop' => 'font-family',
						'key' => 'title_font_family'
				),
				array(	'prop' => 'color',
						'key' => 'title_font_color'
				)
			),
			"$post_id a" => array(
				array(	'prop' => 'color',
						'key' => 'link_color'
				)
			)
		);
		foreach ( $rules as $selector => $property ) {
			foreach ( $property as $val ) {
				$prop = $val['prop'];
				$key = $val['key'];
				if ( is_array( $key ) ) {
					if ( $prop == 'font-size' && themify_check( $key[0] ) ) {
						$css[$selector][$prop] = $prop . ': ' . themify_get( $key[0] ) . themify_get( $key[1] );
					}
				} elseif ( themify_check( $key ) && 'default' != themify_get( $key ) ) {
					if ( $prop == 'color' || stripos( $prop, 'color' ) ) {
						$css[$selector][$prop] = $prop . ': #' . themify_get( $key );
					}
					elseif ( $prop == 'background-image' && 'default' != themify_get( $key ) ) {
						$css[$selector][$prop] = $prop .': url(' . themify_get( $key ) . ')';
					}
					elseif ( $prop == 'background-repeat' && 'fullcover' == themify_get( $key ) ) {
						continue;
					}
					elseif ( $prop == 'font-family' ) {
						$font = themify_get( $key );
						$css[$selector][$prop] = $prop .': '. $font;
						if ( ! in_array( $font, themify_get_web_safe_font_list( true ) ) ) {
							$themify->google_fonts .= str_replace( ' ', '+', $font.'|' );
						}
					}
					else {
						$css[$selector][$prop] = $prop .': '. themify_get( $key );
					}
				}
			}
			if ( ! empty( $css[$selector] ) ) {
				$style .= "$selector {\n\t" . implode( ";\n\t", $css[$selector] ) . "\n}\n";
			}
		}

		if ( '' != $style ) {
			echo "\n<!-- $post_id Style -->\n<style>\n$style</style>\n<!-- End $post_id Style -->\n";
		}
	}
	add_action( 'themify_post_end', 'themify_theme_custom_post_css' );
}

if ( ! function_exists( 'themify_theme_enqueue_google_fonts' ) ) {
	/**
	 * Enqueue Google Fonts
	 * @since 1.0.0
	 */
	function themify_theme_enqueue_google_fonts() {
		global $themify;
		if ( ! isset( $themify->google_fonts ) || '' == $themify->google_fonts ) return;
		$themify->google_fonts = substr( $themify->google_fonts, 0, -1 );
		wp_enqueue_style( 'section-styling-google-fonts', themify_https_esc( 'http://fonts.googleapis.com/css' ). '?family='.$themify->google_fonts );
	}
	add_action( 'wp_footer', 'themify_theme_enqueue_google_fonts' );
}

if ( ! function_exists( 'themify_theme_get_gallery_category_terms' ) ) {
	/**
	 * Displays a list of current gallery categories
	 * @return array of name/value arrays
	 * @since 1.0.0
	 */
	function themify_theme_get_gallery_category_terms() {
		$backgrounds = array();
		$backgrounds[] = array( 'name' => __( 'All Categories', 'themify' ), 'value' => 0 );
		$bgs = get_terms( 'gallery-category' );
		if ( ! empty( $bgs ) ) {
			foreach ( $bgs as $index => $gallery ) {
				$backgrounds[] = array(
					'name' => $gallery->name,
					'value' => $gallery->slug
				);
			}
		}
		return $backgrounds;
	}
}

if ( ! function_exists( 'themify_post_count_markup' ) ) {
	/**
	 * Remove parentheses, wrap in span and put inside link
	 * @param $output
	 * @param $args
	 * @return mixed
	 * @since 1.0.0
	 */
	function themify_post_count_markup( $output, $args ) {
		if ( isset( $args['id'] ) && stripos( $args['id'], 'themify-list-categories' ) !== false ) {
			$search = array( '</a>', '(', ')' );
			$replace = array( '', '<span class="badge pull-right">', '</span></a>' );
			$output = str_replace( $search, $replace, $output );
		}
		return $output;
	}
	add_filter( 'wp_list_categories', 'themify_post_count_markup', 10, 2 );
}

if ( ! function_exists( 'themify_comment_reply_link' ) ) {
	/**
	 * Set class for reply link
	 * @param $before_link_after
	 * @return mixed
	 * @since 1.0.0
	 */
	function themify_comment_reply_link( $before_link_after ) {
		$before_link_after = str_replace( "class='", "class='shortcode button outline small ", $before_link_after );
		return $before_link_after;
	}
	add_filter( 'comment_reply_link', 'themify_comment_reply_link' );
}

if ( ! function_exists('themify_theme_comment') ) {
	/**
	 * Custom Theme Comment
	 * @param object $comment Current comment.
	 * @param array $args Parameters for comment reply link.
	 * @param int $depth Maximum comment nesting depth.
	 * @since 1.0.0
	 */
	function themify_theme_comment( $comment, $args, $depth ) {
	   $GLOBALS['comment'] = $comment; ?>

		<li id="comment-<?php comment_ID() ?>">
			<p class="comment-author">
				<?php printf('%s <cite>%s</cite>', get_avatar( $comment, $size = '70' ), get_comment_author_link()); ?>
				<br />
				<small class="comment-time">
					<?php comment_date( apply_filters('themify_comment_date', '') ); ?>
					@
					<?php comment_time( apply_filters('themify_comment_time', '') ); ?>
					<?php edit_comment_link( __('Edit', 'themify'),' [',']'); ?>
				</small>
			</p>
			<div class="commententry">
				<?php if ($comment->comment_approved == '0') : ?>
					<p><em><?php _e('Your comment is awaiting moderation.', 'themify') ?></em></p>
				<?php endif; ?>
				<?php comment_text(); ?>
			</div>
			<p class="reply">
				<?php comment_reply_link(array_merge( $args, array('add_below' => 'comment', 'depth' => $depth, 'reply_text' => __( 'Reply', 'themify' ), 'max_depth' => $args['max_depth']))) ?>
			</p>
		<?php
	}
}

if ( ! function_exists( 'themify_theme_section_category_classes' ) ) {
	/**
	 * Outputs Section post category classes
	 * @return string
	 */
	function themify_theme_section_category_classes($post_id) {
		$sectioncats = get_the_terms($post_id, 'section-category');
		$categoryclass = '';
		foreach($sectioncats as $sectioncat) {
			$categoryclass .= ' section-category-' . $sectioncat->term_id . ' section-category-' . $sectioncat->slug;
		}
		return $categoryclass;
	}
}

/**
 * Add body classes for the menu bar position
 *
 * @return array
 */
function themify_menu_bar_position_class( $classes ) {
	$menu_bar_position = '';
	if ( is_singular() ) {
		$mbpos_field = get_post_meta( get_the_ID(), 'menu_bar_position', true );
		if ( ! empty( $mbpos_field ) ) {
			$menu_bar_position = $mbpos_field;
		}
	}
	if ( empty( $menu_bar_position ) ) {
		$menu_bar_position = themify_check( 'setting-menu_bar_position' ) ? themify_get( 'setting-menu_bar_position' ) : 'menubar-bottom';
	}

	$classes[] = $menu_bar_position;

	return $classes;
}
add_filter( 'body_class', 'themify_menu_bar_position_class' );

/**
 * Removes Query Sections panel from list of panels to build.
 *
 * @since 2.0.0
 *
 * @param $themify_write_panels
 * @return mixed
 */
function themify_theme_remove_query_sections( $themify_write_panels ) {
	$count = 0;
	foreach( $themify_write_panels as $panel ) {
		if ( 'query-section' == $panel['id'] ) {
			unset( $themify_write_panels[$count] );
		}
		$count++;
	}
	return $themify_write_panels;
}

/**
 * Removes Sections meta box from Menus screen.
 *
 * @since 2.0.0
 */
function themify_theme_unregister_section_menu() {
	remove_meta_box('section-menu', 'nav-menus', 'side');
}

/**
 * Check if there are entries of section post type and unregister section post type otherwise.
 *
 * @since 2.0.0
 */
function themify_theme_unregister_section() {
	$section = get_posts(
		array(
			 'post_type' => 'section',
			 'posts_per_page' => 1
		)
	);
	if ( ! $section ) {
		// Unregister section post type and taxonomy
		global $wp_post_types, $wp_taxonomies;
		if ( isset( $wp_post_types[ 'section' ] ) ) {
			unset( $wp_post_types[ 'section' ] );
		}
		if ( isset( $wp_taxonomies[ 'section-category' ] ) ) {
			unset( $wp_taxonomies[ 'section-category' ] );
		}

		// Remove meta box in menu screen
		add_action( 'admin_init', 'themify_theme_unregister_section_menu', 12 );

		// Remove Query Sections panel in page edit screen
		add_filter( 'themify_do_metaboxes', 'themify_theme_remove_query_sections' );
	}

}

// Once WP is loaded, check if we need to remove section post type and taxonomy
add_action( 'wp_loaded', 'themify_theme_unregister_section' );

/** Compatibility with portfolio posts plugin */
define( 'THEMIFY_PORTFOLIO_POSTS_COMPAT_MODE', true );

/* load the TGMPA library */
if( is_admin() ) {
	require_once THEMIFY_DIR . '/class-tgm-plugin-activation.php';
}

/**
 * Register plugins required for the theme
 *
 * @since 1.0.0
 */
function themify_theme_register_required_plugins() {
	$plugins = array(

        // This is an example of how to include a plugin pre-packaged with a theme.
        array(
            'name'               => __( 'Themify Portfolio Posts', 'themify' ),
            'slug'               => 'themify-portfolio-post',
            'source'             => get_template_directory() . '/plugins/themify-portfolio-post.zip',
            'required'           => true,
            'version'            => '1.0.0',
            'force_activation'   => false,
            'force_deactivation' => false,
        ),

    );

    /**
     * Array of configuration settings. Amend each line as needed.
     * If you want the default strings to be available under your own theme domain,
     * leave the strings uncommented.
     * Some of the strings are added into a sprintf, so see the comments at the
     * end of each line for what each argument will be.
     */
    $config = array(
        'default_path' => '',                      // Default absolute path to pre-packaged plugins.
        'menu'         => 'themify-install-plugins', // Menu slug.
        'has_notices'  => true,                    // Show admin notices or not.
        'dismissable'  => true,                    // If false, a user cannot dismiss the nag message.
        'dismiss_msg'  => '',                      // If 'dismissable' is false, this message will be output at top of nag.
        'is_automatic' => false,                   // Automatically activate plugins after installation or not.
        'message'      => '',                      // Message to output right before the plugins table.
        'strings'      => array(
            'page_title'                      => __( 'Install Required Plugins', 'themify' ),
            'menu_title'                      => __( 'Install Plugins', 'themify' ),
            'installing'                      => __( 'Installing Plugin: %s', 'themify' ), // %s = plugin name.
            'oops'                            => __( 'Something went wrong with the plugin API.', 'themify' ),
            'notice_can_install_required'     => _n_noop( 'This theme requires the following plugin: %1$s.', 'This theme requires the following plugins: %1$s.', 'themify' ), // %1$s = plugin name(s).
            'notice_can_install_recommended'  => _n_noop( 'This theme recommends the following plugin: %1$s.', 'This theme recommends the following plugins: %1$s.', 'themify' ), // %1$s = plugin name(s).
            'notice_cannot_install'           => _n_noop( 'Sorry, but you do not have the correct permissions to install the %s plugin. Contact the administrator of this site for help on getting the plugin installed.', 'Sorry, but you do not have the correct permissions to install the %s plugins. Contact the administrator of this site for help on getting the plugins installed.', 'themify' ), // %1$s = plugin name(s).
            'notice_can_activate_required'    => _n_noop( 'The following required plugin is currently inactive: %1$s.', 'The following required plugins are currently inactive: %1$s.', 'themify' ), // %1$s = plugin name(s).
            'notice_can_activate_recommended' => _n_noop( 'The following recommended plugin is currently inactive: %1$s.', 'The following recommended plugins are currently inactive: %1$s.', 'themify' ), // %1$s = plugin name(s).
            'notice_cannot_activate'          => _n_noop( 'Sorry, but you do not have the correct permissions to activate the %s plugin. Contact the administrator of this site for help on getting the plugin activated.', 'Sorry, but you do not have the correct permissions to activate the %s plugins. Contact the administrator of this site for help on getting the plugins activated.', 'themify' ), // %1$s = plugin name(s).
            'notice_ask_to_update'            => _n_noop( 'The following plugin needs to be updated to its latest version to ensure maximum compatibility with this theme: %1$s.', 'The following plugins need to be updated to their latest version to ensure maximum compatibility with this theme: %1$s.', 'themify' ), // %1$s = plugin name(s).
            'notice_cannot_update'            => _n_noop( 'Sorry, but you do not have the correct permissions to update the %s plugin. Contact the administrator of this site for help on getting the plugin updated.', 'Sorry, but you do not have the correct permissions to update the %s plugins. Contact the administrator of this site for help on getting the plugins updated.', 'themify' ), // %1$s = plugin name(s).
            'install_link'                    => is_multisite() ? _n_noop( '', '', 'themify' ) : _n_noop( 'Begin installing plugin', 'Begin installing plugins', 'themify' ),
            'activate_link'                   => _n_noop( 'Begin activating plugin', 'Begin activating plugins', 'themify' ),
            'return'                          => __( 'Return to Required Plugins Installer', 'themify' ),
            'plugin_activated'                => __( 'Plugin activated successfully.', 'themify' ),
            'complete'                        => __( 'All plugins installed and activated successfully. %s', 'themify' ), // %s = dashboard link.
            'nag_type'                        => 'updated' // Determines admin notice type - can only be 'updated', 'update-nag' or 'error'.
        )
    );

    tgmpa( $plugins, $config );
	add_action( 'admin_menu', 'themify_theme_required_plugins_admin_menu', 11 );
}
add_action( 'tgmpa_register', 'themify_theme_register_required_plugins' );

/**
 * Relocate the tgmpa admin menu under Themify
 *
 * @since 1.0.0
 */
function themify_theme_required_plugins_admin_menu() {
	// Make sure privileges are correct to see the page
	if ( ! current_user_can( 'install_plugins' ) ) {
		return;
	}

	TGM_Plugin_Activation::get_instance()->populate_file_path();

	foreach ( TGM_Plugin_Activation::get_instance()->plugins as $plugin ) {
		if ( ! is_plugin_active( $plugin['file_path'] ) ) {
			add_submenu_page( 'themify', __( 'Install Plugins', 'themify' ), __( 'Install Plugins', 'themify' ), 'manage_options', 'themify-install-plugins', array( TGM_Plugin_Activation::get_instance(), 'install_plugins_page' ) );
			break;
		}
	}
}

/**
 * Fix issue with tgmpa and WP multisite
 *
 * @since 1.0.0
 */
function themify_theme_tgmpa_mu_fix( $links ) {
	if( is_multisite() ) {
		$links['install'] = __( 'Auto plugin installation is not support in WordPress multisite. To install this plugin: go to Network Admin > Plugins > Add New (the plugin zip is included in the theme folder > plugins > folder).', 'themify' );
	}

	return $links;
}
add_filter( 'tgmpa_notice_action_links', 'themify_theme_tgmpa_mu_fix' );

/**
 * Hide plugin activation link on WP Multisite
 */
function themify_theme_tgmpa_mu_hide_activate_link() {
	global $hook_suffix;

	if( is_multisite() && $hook_suffix == 'appearance_page_themify-install-plugins' ) {
		echo '<style>.plugins .row-actions { display: none !important; }</style>';
	}
}
add_filter( 'admin_head', 'themify_theme_tgmpa_mu_hide_activate_link' );

/**
 * Set portfolio post type slug
 *
 * @since 1.1.0
 * @return string
 */
function themify_theme_portfolio_post_rewrite( $id ) {
	$slug = themify_get( 'themify_portfolio_slug' );
	return empty( $slug ) ? apply_filters( 'themify_portfolio_rewrite', 'project' ) : $slug;
}
add_filter( 'themify_portfolio_post_rewrite', 'themify_theme_portfolio_post_rewrite' );

/**
 * Handle Builder's JavaScript fullwidth rows, forces fullwidth rows if sidebar is disabled
 *
 * @return bool
 */
function themify_theme_fullwidth_layout( $support ) {
	global $themify;

	/* if Content Width option is set to Fullwidth, do not use JavaScript */
	if( themify_theme_is_fullpage_scroll() || themify_get( 'content_width' ) == 'full_width' ) {
		return true;
	}

	/* using sidebar-none layout, force fullwidth rows using JavaScript */
	if( $themify->layout == 'sidebar-none' ) {
		return false;
	}

	return true;
}
add_filter( 'themify_builder_fullwidth_layout_support', 'themify_theme_fullwidth_layout' );

/**
 * Check whether fullpage scrolling is enabled
 *
 * @return bool
 * @since 1.5.4
 */
function themify_theme_is_fullpage_scroll() {
    if ( ! ( ( isset( $_REQUEST['wp_customize'] ) && 'on' == $_REQUEST['wp_customize'] )
        || ( is_admin() && 'customize.php' == basename( $_SERVER['PHP_SELF'] ) )
    ) ) {
        $is_fullpage_scroll = 'yes' == themify_get( 'section_full_scrolling' );
    } else {
        $is_fullpage_scroll = 'no' == themify_get( 'section_full_scrolling' );
    }

	$is_fullpage_scroll = themify_is_touch( 'phone' ) ? false : $is_fullpage_scroll; // disable fullpage scroll on mobile

	return apply_filters( 'themify_theme_is_fullpage_scroll', $is_fullpage_scroll );
}

/**
 * Disable Builder ScrollHighlight script when fullpage is on
 *
 * @since 1.5.4
 */
function themify_theme_disable_scrollHighlight_on_fullpage( $args ) {
	if( themify_theme_is_fullpage_scroll() ) {
		$args['loadScrollHighlight'] = false;
	}

	return $args;
}
add_filter( 'themify_builder_script_vars', 'themify_theme_disable_scrollHighlight_on_fullpage' );

/**
 * Custom script files for the admin dashboard
 */
function themify_theme_admin_enqueue_scripts() {
	$screen = get_current_screen();
	if ( 'page' == $screen->post_type ) {
		wp_enqueue_script( 'themify-theme-custom-panel', THEME_URI . '/admin/themify-custom-panel.js', array( 'jquery' ) );
	}
}